/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";

import {
  IsInt,
  Max,
  IsDate,
  ValidateNested,
  IsOptional,
  IsEnum,
  IsString,
  MaxLength,
} from "class-validator";

import { Type } from "class-transformer";
import { Customer } from "../../customer/base/Customer";
import { EnumReservationFloor } from "./EnumReservationFloor";
import { EnumReservationStatus } from "./EnumReservationStatus";
import { Table } from "../../table/base/Table";
import { User } from "../../user/base/User";

@ObjectType()
class Reservation {
  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @Field(() => Number)
  cover!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => Customer,
  })
  @ValidateNested()
  @Type(() => Customer)
  @IsOptional()
  customer?: Customer | null;

  @ApiProperty({
    required: false,
    enum: EnumReservationFloor,
  })
  @IsEnum(EnumReservationFloor)
  @IsOptional()
  @Field(() => EnumReservationFloor, {
    nullable: true,
  })
  floor?: "Terasse" | "Rdc" | "under" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  note!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  reservationDate!: Date;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @Field(() => String)
  reservationTime!: string;

  @ApiProperty({
    required: true,
    enum: EnumReservationStatus,
  })
  @IsEnum(EnumReservationStatus)
  @Field(() => EnumReservationStatus, {
    nullable: true,
  })
  status?: "Confirmed" | "Booked" | "Cancelled" | "Completed";

  @ApiProperty({
    required: false,
    type: () => Table,
  })
  @ValidateNested()
  @Type(() => Table)
  @IsOptional()
  table?: Table | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  user?: User | null;
}

export { Reservation as Reservation };
